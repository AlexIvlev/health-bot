from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from data import load_user_data

router = Router()


@router.message(Command("check_progress"))
async def check_progress(message: Message):
    user_id = str(message.from_user.id)
    user_data = load_user_data(user_id)

    if not user_data:
        await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_profile –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        return

    # –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≤–æ–¥–µ
    water_goal = user_data.get("water_goal", 0)
    logged_water = user_data.get("logged_water", 0)
    remaining_water = max(water_goal - logged_water, 0)

    water_progress = (
        f"üíß *–í–æ–¥–∞:*\n"
        f"- –í—ã–ø–∏—Ç–æ: {logged_water} –º–ª –∏–∑ {water_goal} –º–ª.\n"
        f"- –û—Å—Ç–∞–ª–æ—Å—å –¥–æ —Ü–µ–ª–∏: {remaining_water} –º–ª.\n"
    )

    # –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º
    calorie_goal = user_data.get("calorie_goal", 0)
    logged_calories = user_data.get("logged_calories", 0)
    burned_calories = user_data.get("burned_calories", 0)

    calorie_balance = logged_calories - burned_calories
    remaining_calories = max(calorie_goal - calorie_balance, 0)

    calorie_progress = (
        f"üî• *–ö–∞–ª–æ—Ä–∏–∏:*\n"
        f"- –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–æ: {logged_calories:.1f} –∫–∫–∞–ª –∏–∑ {calorie_goal} –∫–∫–∞–ª.\n"
        f"- –°–æ–∂–∂–µ–Ω–æ: {burned_calories:.1f} –∫–∫–∞–ª.\n"
        f"- –ë–∞–ª–∞–Ω—Å: {calorie_balance:.1f} –∫–∫–∞–ª.\n"
        f"- –û—Å—Ç–∞–ª–æ—Å—å –¥–æ —Ü–µ–ª–∏: {remaining_calories:.1f} –∫–∫–∞–ª."
    )

    await message.answer(f"üìä *–ü—Ä–æ–≥—Ä–µ—Å—Å:*\n\n{water_progress}\n{calorie_progress}", parse_mode="Markdown")
